package com.slh.flutter_hw_live.pull;import android.app.Activity;import android.util.Log;import android.view.View;import com.slh.flutter_hw_live.pull.listener.OnVideoViewStateChangeListener;import com.slh.flutter_hw_live.pull.listener.PlayerEventListener;import com.slh.flutter_hw_live.pull.weplayer.AbstractPlayer;import com.slh.flutter_hw_live.pull.weplayer.WeVideoView;import com.slh.flutter_hw_live.pull.weplayer.vPlayer;import java.util.Map;import io.flutter.plugin.common.BinaryMessenger;import io.flutter.plugin.common.MethodCall;import io.flutter.plugin.common.MethodChannel;import io.flutter.plugin.platform.PlatformView;import tv.danmaku.ijk.media.player.IMediaPlayer;public class HwPullView implements PlatformView, MethodChannel.MethodCallHandler, PlayerEventListener {    private final String TAG = "HwPullView";    private final Activity activity;    private final MethodChannel methodChannel;    private WeVideoView mWeVideoView;    public HwPullView(BinaryMessenger messenger, Activity activity, int id) {        this.activity = activity;        methodChannel = new MethodChannel(messenger, "com.slh.hw_live/HwPullView_" + id);        methodChannel.setMethodCallHandler(this);        initPlayer();    }    /**     * 初始化播放器     */    protected void initPlayer() {        mWeVideoView = new WeVideoView(activity);        mWeVideoView.addOnVideoViewStateChangeListener(new OnVideoViewStateChangeListener() {            @Override            public void onPlayerStateChanged(int playerState) {            }            @Override            public void onPlayStateChanged(int playState) {            }        });        mWeVideoView.setVolume(1,1);    }    @Override    public View getView() {        return mWeVideoView;    }    @Override    public void dispose() {        Log.e(TAG, "dispose");        if (mWeVideoView != null) {            mWeVideoView.release();            mWeVideoView = null;        }    }    @Override    public void onMethodCall(MethodCall methodCall, MethodChannel.Result result) {        Map<String, Object> request = methodCall.arguments();        if (methodCall.method.equals("start")) {            start(request.get("url").toString(), Boolean.parseBoolean(request.get("isLive").toString()));            result.success(true);        } else if (methodCall.method.equals("cameraSwitch")) {            result.success(true);        } else {            result.notImplemented();        }    }    public void start(String url, boolean isLive) {        if (mWeVideoView != null) {            mWeVideoView.setUrl(url);            mWeVideoView.start(isLive);        }    }    @Override    public void onError() {        Log.e(TAG, "onError");    }    @Override    public void onCompletion() {        Log.e(TAG, "onCompletion");    }    @Override    public void onCompletion(IMediaPlayer iMediaPlayer) {        Log.e(TAG, "onCompletion");    }    @Override    public void onInfo(int what, int extra) {        Log.e(TAG, "onInfo=>what:" + what + ",extra:" + extra);    }    @Override    public void onPrepared() {        Log.e(TAG, "onPrepared");    }    @Override    public void onVideoSizeChanged(int width, int height) {        Log.e(TAG, "onVideoSizeChanged=>width:" + width + ",height:" + height);    }}